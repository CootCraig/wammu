Wammu installation
==================

It uses standard distutils, so:
python setup.py build
su
python setup.py install

You need python-gammu and wxPython [1] (Unicode enabled build) installed to
run and install this program. If you want support for scanning bluetooth
devices, you need PyBluez [2]. For incoming events notifications, you
need dbus-pyhon [3].

For Windows you also have to install Pywin32 [4].

If you want to obey dependency checking at build time for any reason,
you can use --skip-deps option.

[1]: http://wxpython.org/
[2]: http://org.csail.mit.edu/pybluez/
[3]: http://www.freedesktop.org/wiki/Software/DBusBindings
[4]: https://sourceforge.net/projects/pywin32/


Cross compilation for Windows on Linux
======================================

You need Wine with installed all dependencies (see above section where
to get them).

Building installer for wammu for Python is easy:

wine c:\\python25\\python setup.py build --skip-deps bdist_wininst

However this way user needs to also install all dependencies, what is
really not comfortable. This should be solved using py2exe[5], but it
does not seem to work in Wine now:

wine c:\\python25\\python setup.py build --skip-deps py2exe


To start Wammu in local directory using wine just start:

wine c:\\python25\\python wammu.py

If it complains (end of traceback):
  File "C:\Python25\lib\random.py", line 108, in seed
    a = long(_hexlify(_urandom(16)), 16)
WindowsError: [Error -2146893801] Windows Error 0x80090017

It's because of wine problem. Then use the following patch:

--- wammu.py.orig	2007-05-07 11:22:24.000000000 +0300
+++ wammu.py	2007-11-23 05:40:22.654590589 +0200
@@ -30,6 +30,9 @@
 import Wammu
 import Wammu.Locales
 
+def ni(i): raise NotImplementedError
+os.urandom = ni
+
 # Try to import iconv_codec to allow working on chinese windows
 try:
     import iconv_codec


[5]: http://www.py2exe.org/

# vim: et ts=4 sw=4 sts=4 tw=72 spell spelllang=en_us
